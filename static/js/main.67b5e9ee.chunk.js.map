{"version":3,"sources":["Todo.jpg","Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","items","setItems","upDateItem","setUpDateItem","IsEditItems","setIsEditItems","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","className","src","img","alt","type","placeholder","value","onChange","e","target","title","onClick","index","newEditItem","find","editItem","Updateditems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAAe,MAA0B,iC,OCkH1BA,EA9GF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAsCN,mBAAS,MAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEMC,EAAU,WACZ,GAAKR,EAEE,GAAIA,IAAcI,EACrBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAKC,KAAOL,EACL,2BAAKI,GAAZ,IAAkBE,KAAMZ,IAErBU,MAKfL,GAAc,GACdJ,EAAa,IACbM,EAAe,UAEZ,CACH,IAAMM,EAAe,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMZ,GAClEG,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBZ,EAAa,SAnBbgB,MAAM,yBA4Cd,OACI,mCACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAKC,EAAKC,IAAI,aACnB,+EAEJ,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OAAOV,KAAK,GAAGW,YAAY,2BACnCC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAOzB,EAAayB,EAAEC,OAAOH,UAGvCpB,EAAa,mBAAGc,UAAU,qBAAqBU,MAAM,YAAYC,QAASrB,IACtE,mBAAGU,UAAU,sBAAsBU,MAAM,aAAaC,QAASrB,OAO3E,qBAAKU,UAAU,YAAf,SAEQhB,EAAMO,KAAI,SAACC,GACP,OACI,sBAAKQ,UAAU,WAAf,UACI,6BAAKR,EAAKE,OACV,sBAAKM,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBU,MAAM,aAAaC,QAAS,kBAvCtF,SAACC,GACd,IAAIC,EAAc7B,EAAM8B,MAAK,SAACtB,GAC1B,OAAOA,EAAKC,KAAOmB,KAGvBzB,GAAc,GACdJ,EAAa8B,EAAYnB,MACzBL,EAAeuB,GAgC0FG,CAASvB,EAAKC,OACnF,mBAAGO,UAAU,2BAA2BU,MAAM,eAAeC,QAAS,kBAnD3F,SAACC,GAChB,IAAMI,EAAehC,EAAMiC,QAAO,SAACzB,GAC/B,OAAOoB,GAASpB,EAAKC,MAGzBR,EAAS+B,GA8CuGE,CAAW1B,EAAKC,YAJrED,EAAKC,SAmBpD,qBAAKO,UAAU,YAAf,SACI,yBAAQA,UAAU,eAAe,oBAAkB,aAAaW,QA5DlE,WACd1B,EAAS,KA2DO,cAAqF,4DCzF9FkC,EAVF,WACX,OACE,mCACA,8BACE,cAAC,EAAD,SCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67b5e9ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Todo.bd9a490f.jpg\";","import React, { useState } from \"react\";\r\nimport img from './Todo.jpg'\r\n\r\n\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const [upDateItem, setUpDateItem] = useState(true);\r\n    const [IsEditItems, setIsEditItems] = useState(null);\r\n\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert('please fill the Data');\r\n        } else if (inputData && !upDateItem) {\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if (elem.id === IsEditItems) {\r\n                        return { ...elem, name: inputData }\r\n                    }\r\n                    return elem;\r\n\r\n                })\r\n\r\n            )\r\n            setUpDateItem(true);\r\n            setInputData('');\r\n            setIsEditItems(null);\r\n\r\n        } else {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputData }\r\n            setItems([...items, allInputData]);\r\n            setInputData('');\r\n        }\r\n\r\n    }\r\n    const deleteItem = (index) => {\r\n        const Updateditems = items.filter((elem) => {\r\n            return index != elem.id;\r\n\r\n        });\r\n        setItems(Updateditems);\r\n    }\r\n    const removeAll = () => {\r\n        setItems([]);\r\n\r\n    }\r\n    const editItem = (index) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return elem.id === index;\r\n\r\n        });\r\n        setUpDateItem(false);\r\n        setInputData(newEditItem.name);\r\n        setIsEditItems(index);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src={img} alt=\"todologo\" />\r\n                        <figcaption> Add Your List Here.🤑  </figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" name=\"\" placeholder=\"✍️ Add Items..\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        {\r\n                            upDateItem ? <i className=\"fa fa-plus add-btn\" title=\"Add Items\" onClick={addItem}></i> :\r\n                                <i className=\"far fa-edit add-btn\" title=\"Edit Items\" onClick={addItem}></i>\r\n\r\n\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((elem) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={elem.id}>\r\n                                        <h3>{elem.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Items\" onClick={() => editItem(elem.id)}></i>\r\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Items\" onClick={() => deleteItem(elem.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                )\r\n\r\n                            })\r\n\r\n\r\n                        }\r\n\r\n\r\n\r\n                    </div>\r\n                    {/* clear all btn  */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}> <span> CHECK LIST</span></button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n\r\n};\r\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst  App = () => {\n  return (\n    <>\n    <div>\n      <Todo />\n    </div>\n    </>\n  )\n};\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}